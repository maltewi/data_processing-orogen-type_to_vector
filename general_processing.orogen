name "general_processing"

version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
import_types_from "GeneralProcessingTypes.hpp"

# If the component/deployments use data types that are defined in other oroGen
# projects, these projects should be imported there as well.
# import_types_from "base"
using_library 'general_processing'

task_context "BaseTask" do
    doc "This task provides a infrastructure for processing data types as a "+
    "vector of their values. Input ports can pe added, that automatically are "+
    "converted into a vector of doubles. Vectors of multiple ports can be aranged "+
    "into one big vector."

    # Announce possible creation of input ports at runtime. Might be needed by Roby.
    dynamic_input_port(/\w+/, nil).
        needs_reliable_connection. # TODO necessary?
        task_trigger

    operation("addComponentToVector").
       returns("bool").
       argument("component", "/std/string", "compoment to receive the ports from").
       argument("slice", "/std/string", "get a part of the data, is applied to all ports").
       argument("to_vector", "int").
       doc("add all ports of a component")
   
    operation("addPortToVector").
       returns("bool").
       argument("component", "/std/string", "compoment to receive the data from").
       argument("port", "/std/string", "component's port to receive the data from").
       argument("slice", "/std/string", "get only a part of the data").
       argument("to_vector","int").
       doc("add a port of a component")

    operation("createInputPort").
        returns("bool").
        argument("port_name", "std/string", "the name of the port to be created").
        argument("type_name", "std/string", "the name of the type the port should handle").
        argument("slice", "std/string", "describes the part of the type to be converted").
        argument("to_vector", "int", "index of the vector is should be added to").
        doc("creates an input port at runtime")

    property("output_toc","bool").
        doc "outputs the content description of the most recently assembled vector"

    output_port("vector_tocs", "/general_processing/VectorTocInfo"). # own data structure?
        doc "puts out vector content data if output_toc is true"

    stream_aligner

end
